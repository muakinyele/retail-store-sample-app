name: Terraform Deployment

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  TERRAFORM_DIR: terraform

jobs:
  terraform-deploy:
    name: Terraform Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::149536455430:role/github-actions-eks-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      # Optional: Validate that backend resources exist
      - name: Check Terraform Backend (S3 + DynamoDB)
        run: |
          echo "Checking backend resources..."
          aws s3api head-bucket --bucket innovate-mart && echo "✅ S3 bucket OK"
          aws dynamodb describe-table --table-name innovatemart-terraform-locks && echo "✅ DynamoDB lock table OK"

      - name: Terraform Init
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform init -input=false

      - name: Terraform Validate
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform plan -no-color -out=tfplan

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ${{ env.TERRAFORM_DIR }}/tfplan

      - name: Terraform Apply (Only if changes)
        if: success()
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          set -euo pipefail
          if terraform show -no-color tfplan | grep -q "No changes. Infrastructure is up-to-date."; then
            echo "✅ No infrastructure changes to apply."
          else
            echo "🚀 Applying Terraform plan..."
            terraform apply -auto-approve tfplan
          fi

      - name: Deployment Summary
        if: always()
        run: |
          echo "### 🌍 Terraform Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "**Region:** $AWS_REGION" >> $GITHUB_STEP_SUMMARY
          echo "**Backend Bucket:** innovate-mart" >> $GITHUB_STEP_SUMMARY
          echo "**Lock Table:** innovatemart-terraform-locks" >> $GITHUB_STEP_SUMMARY
          echo "**State File:** infra/terraform.tfstate" >> $GITHUB_STEP_SUMMARY
